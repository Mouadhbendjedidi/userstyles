/* ==UserStyle==
@name DeepSeek Catppuccin
@namespace github.com/catppuccin/userstyles/styles/deepseek
@homepageURL https://github.com/catppuccin/userstyles/tree/main/styles/deepseek
@version 2025.04.09
@updateURL https://github.com/catppuccin/userstyles/raw/main/styles/deepseek/catppuccin.user.less
@supportURL https://github.com/catppuccin/userstyles/issues?q=is%3Aopen+is%3Aissue+label%3Adeepseek
@description Soothing pastel theme for DeepSeek
@author Catppuccin
@license MIT

@preprocessor less
@var select lightFlavor "Light Flavor" ["latte:Latte*", "frappe:Frappé", "macchiato:Macchiato", "mocha:Mocha"]
@var select darkFlavor "Dark Flavor" ["latte:Latte", "frappe:Frappé", "macchiato:Macchiato", "mocha:Mocha*"]
@var select accentColor "Accent" ["rosewater:Rosewater", "flamingo:Flamingo", "pink:Pink", "mauve:Mauve*", "red:Red", "maroon:Maroon", "peach:Peach", "yellow:Yellow", "green:Green", "teal:Teal", "blue:Blue", "sapphire:Sapphire", "sky:Sky", "lavender:Lavender", "subtext0:Gray"]
==/UserStyle== */

@-moz-document url-prefix("https://chat.deepseek.com/") {
    
  /* This section applies the light/dark themes automatically based on the user's system theme.
   Use the below example CSS to start if the website you are theming doesn't have a light/dark mode toggle.
   For an actual example of this, see https://github.com/catppuccin/userstyles/blob/39288b593278e5efa48007d5fc001292cf910672/styles/brave-search/catppuccin.user.css#L16-L29.
*/

/* If the website you are theming *does* have a light/dark mode toggle,
   you can conditionally enable light/dark flavors by targeting whatever
   attribute that website uses to indicate the theme. *The example below gives you an idea of what
   to look for. The website you are theming may use a class-based approach (e.g. :root.theme-dark),
   or any of the myriad of other methods like this.*
   Use the below example CSS to start if this is the case.
   For an actual example of this, see https://github.com/catppuccin/userstyles/blob/39288b593278e5efa48007d5fc001292cf910672/styles/youtube/catppuccin.user.css#L21-L30.
*/
	body.dark {
	  #catppuccin(@darkFlavor);
	}
	body {
	  #catppuccin(@lightFlavor);
	}

	#catppuccin(@flavor) {
	  @rosewater: @catppuccin[@@flavor][@rosewater];
	  @flamingo: @catppuccin[@@flavor][@flamingo];
	  @pink: @catppuccin[@@flavor][@pink];
	  @mauve: @catppuccin[@@flavor][@mauve];
	  @red: @catppuccin[@@flavor][@red];
	  @maroon: @catppuccin[@@flavor][@maroon];
	  @peach: @catppuccin[@@flavor][@peach];
	  @yellow: @catppuccin[@@flavor][@yellow];
	  @green: @catppuccin[@@flavor][@green];
	  @teal: @catppuccin[@@flavor][@teal];
	  @sky: @catppuccin[@@flavor][@sky];
	  @sapphire: @catppuccin[@@flavor][@sapphire];
	  @blue: @catppuccin[@@flavor][@blue];
	  @lavender: @catppuccin[@@flavor][@lavender];
	  @text: @catppuccin[@@flavor][@text];
	  @subtext1: @catppuccin[@@flavor][@subtext1];
	  @subtext0: @catppuccin[@@flavor][@subtext0];
	  @overlay2: @catppuccin[@@flavor][@overlay2];
	  @overlay1: @catppuccin[@@flavor][@overlay1];
	  @overlay0: @catppuccin[@@flavor][@overlay0];
	  @surface2: @catppuccin[@@flavor][@surface2];
	  @surface1: @catppuccin[@@flavor][@surface1];
	  @surface0: @catppuccin[@@flavor][@surface0];
	  @base: @catppuccin[@@flavor][@base];
	  @mantle: @catppuccin[@@flavor][@mantle];
	  @crust: @catppuccin[@@flavor][@crust];
	  @accent: @catppuccin[@@flavor][@@accentColor];

  color-scheme: if(@flavor = latte, light, dark);

  ::selection {
    background-color: fade(@accent, 30%);
  }
	
		--dsr-main: @accent;
		--dsr-side-bg: @mantle;
		--dsr-side-hover-bg: @surface0;
		--dsr-input-bg: @surface0;
		--dsr-bg: @base;
		--button-text-color: @text;
    	--ds-modal-content-color: @base;
		background-color: @base;
	/* styling chat section */
		
		/* upbar color */
		._2be88ba {
			background-color: @base;
		}
		/* Send button */
		._7436101 {
			background: @accent;
			color: @crust
		}
		
		._7436101:hover {
			background-color:darken(fade(@accent,100%),10%);
		}
		
		._7436101.bcc55ca1 {
			color:@subtext0;
			background-color:@overlay0;
		}
		
		._7436101 ._6f28693 .ds-icon svg {
			color: @mantle;
		}
		
		/* shadow effect */
		._62b4800 {
			background: linear-gradient(fade(@base,80%) 0%,fade(@base,0%) 100%)	
		}
		/* deepseek path filling */
		 .da6cda9a path {
			fill: @accent;
		}
		
		._6c7e7df {
			color:@text;
		}
		
		._9a8d0e1 {
			color: @text;
		}
		
		._0fcaa63 {
			color:@overlay0;
		}
		
		.dd442025 {
			box-shadow: 0 0 0 .5px fade(@surface2, 30%);	
		}
		
		.f02f0e25 {
			color: @text;
		}
		
		._48cdfc1 {
			color:@surface2;
		}
		
		.e066abb8 svg {
			color:@subtext0;
		}
		
		._106b9f9 svg rect {
			fill:@accent;
		}

    ._106b9f9 svg path {
			fill:@crust;
		}
    
		
		.ds-dropdown-menu  {
			background-color:@surface1;
		}
		
		.ds-dropdown-menu-option:hover, .ds-dropdown-menu-option.ds-dropdown-menu-option--pending {
			background-color:@surface2;
		}
		
		.ds-dropdown-menu-option__label {
			color:@text;
		}
		
		.ds-icon svg {
			color:@subtext1;
		}

    .f0d4f23d .ds-icon svg path {
      fill:@accent;
    }

		.c08e6e93 {
			color: @text;
		}
		
		.ds-icon-button {
			color:@subtext1;
		}

    /* Settings Window */

    .ds-modal-content {
      background-color: @surface0;
    }

    .ds-segmented {
      background-color: @surface2;
    }

    .ds-segmented-button{
      background-color: @surface2;
    }

    .ds-segmented-button.ds-segmented-button--selected {
      background-color: @overlay0;
    }

    .ds-modal-content__title {
      color:@text;
    }

    .ds-flex {
      color: @text;
      border-bottom-color: 1px solid @surface1 !important;
    }

    .ds-native-select--filled {
      color: @text;
    }

    .ds-native-select__select {
      background-color: @surface1;
    }

    .ds-native-select__arrow svg {
      color: @overlay2;
    }

    .ds-button.ds-button--bordered.ds-button--secondary {
      box-shadow: inset 0 0 0 1px @overlay0;
      color: @text;
    }

    .ds-button.ds-button--bordered.ds-button--secondary:hover {
      background-color: @surface1;
    }

    .ds-button.ds-button--filled.ds-button--error {
      --button-text-color: @base;
      --button-icon-color: @base;
      --ds-button-color: @red;
    }

    .ds-button.ds-button--filled.ds-button--error:hover {
      --button-text-color: @base;
      --button-icon-color: @base;
      --ds-button-color: darken(@red,5%);
    }

    ._0d00f26 {
      color: @subtext0;
    }

    ._7eb2358 {
      background-color: @base;
      border-color: 1px solid fade(@accent,30%);
    }

    ._7eb2358 svg path {
      fill: @accent;
    }

    /* Markdown Styling */
    .ds-markdown a:not(.ds-a) {
      color: @accent;
    }

    .ds-markdown code {
      background-color: @surface0;
      color: @text;
    }

    .ds-markdown blockquote {
      border-left-color: 2px solid @overlay0;
    }

    .ds-markdown li::marker {
      color: @overlay1;
    }

    .ds-markdown th {
      color: @text;
      border-bottom-color: 1px solid @overlay0;
      border-top-color: 1px solid @overlay0;
    }

    .ds-markdown td {
      border-bottom-color: 1px solid @overlay0;
    }

	.md-code-block-dark {
		--ds-md-code-banner-background-color: @surface1;
		color: @text;
		background-color: @crust;
	}

    ._83421f9 {
      --dsr-local-active-bg: @surface1;
    }



  & when (@flavor = latte) {
	  
    ._5a8ac7a {
			--local-button: fade(@accent,10%);
			--local-button-hover: darken(fade(@accent,10%),5%);
		}

	  
	  ._217e214{
			color: @accent;
			background-color: fade(@accent,10%);
		}

    
	  
  }
  /* You can also negate the statement above by using
   *  a `when not` guard clause. */
  & when not(@flavor = latte) {
	  ._5a8ac7a {
			--local-button: @accent;
			--local-button-hover: darken(@accent,5%);
		}

	  ._217e214 {
			color: @text;
			background-color: @accent;
		}

    ._217e214 svg {
			color: @crust;
		}

    ._217e214 span {
			color: @crust;
		}
	  
	  .c7dddcde {
			color:@crust;
	  }

	  
  }
}
}

/* deno-fmt-ignore */
@catppuccin: {
@latte:     { @rosewater: #dc8a78; @flamingo: #dd7878; @pink: #ea76cb; @mauve: #8839ef; @red: #d20f39; @maroon: #e64553; @peach: #fe640b; @yellow: #df8e1d; @green: #40a02b; @teal: #179299; @sky: #04a5e5; @sapphire: #209fb5; @blue: #1e66f5; @lavender: #7287fd; @text: #4c4f69; @subtext1: #5c5f77; @subtext0: #6c6f85; @overlay2: #7c7f93; @overlay1: #8c8fa1; @overlay0: #9ca0b0; @surface2: #acb0be; @surface1: #bcc0cc; @surface0: #ccd0da; @base: #eff1f5; @mantle: #e6e9ef; @crust: #dce0e8; };
@frappe:    { @rosewater: #f2d5cf; @flamingo: #eebebe; @pink: #f4b8e4; @mauve: #ca9ee6; @red: #e78284; @maroon: #ea999c; @peach: #ef9f76; @yellow: #e5c890; @green: #a6d189; @teal: #81c8be; @sky: #99d1db; @sapphire: #85c1dc; @blue: #8caaee; @lavender: #babbf1; @text: #c6d0f5; @subtext1: #b5bfe2; @subtext0: #a5adce; @overlay2: #949cbb; @overlay1: #838ba7; @overlay0: #737994; @surface2: #626880; @surface1: #51576d; @surface0: #414559; @base: #303446; @mantle: #292c3c; @crust: #232634; };
@macchiato: { @rosewater: #f4dbd6; @flamingo: #f0c6c6; @pink: #f5bde6; @mauve: #c6a0f6; @red: #ed8796; @maroon: #ee99a0; @peach: #f5a97f; @yellow: #eed49f; @green: #a6da95; @teal: #8bd5ca; @sky: #91d7e3; @sapphire: #7dc4e4; @blue: #8aadf4; @lavender: #b7bdf8; @text: #cad3f5; @subtext1: #b8c0e0; @subtext0: #a5adcb; @overlay2: #939ab7; @overlay1: #8087a2; @overlay0: #6e738d; @surface2: #5b6078; @surface1: #494d64; @surface0: #363a4f; @base: #24273a; @mantle: #1e2030; @crust: #181926; };
@mocha:     { @rosewater: #f5e0dc; @flamingo: #f2cdcd; @pink: #f5c2e7; @mauve: #cba6f7; @red: #f38ba8; @maroon: #eba0ac; @peach: #fab387; @yellow: #f9e2af; @green: #a6e3a1; @teal: #94e2d5; @sky: #89dceb; @sapphire: #74c7ec; @blue: #89b4fa; @lavender: #b4befe; @text: #cdd6f4; @subtext1: #bac2de; @subtext0: #a6adc8; @overlay2: #9399b2; @overlay1: #7f849c; @overlay0: #6c7086; @surface2: #585b70; @surface1: #45475a; @surface0: #313244; @base: #1e1e2e; @mantle: #181825; @crust: #11111b; };
};